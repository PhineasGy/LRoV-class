clear
clc;

%% step 1: 建立介質
% Eye 物件
% eye = Eye();
eye = Eye(mode=[-1,0,1],...
          IPD=60,...
          VD=500,...
          VVA=30,...
          HVA=0,...
          PS=10,...
          STA=0);   % STA: optional
air_eye = Cube(thickness=eye.VD_z,refractive_index=1);
% autoGP 設定
autoGP = AutoGP(medium_list = {Cube(),[],Cube()},WDGP = 550);  % 決定 PLA 追跡順序 (由下至上)。 [] 代表 GP 位置
gp = GradientPrism( PBA_key = [41.5],...
                    GPMode = 1,...  % 0: noGP, 1: autoGP, 2: manualGP
                    PRA = -10,...
                    refractive_index = 1.49,...
                    thickness = 1.934 + 0.066/2,...
                    autoGP = autoGP,...
                    reversed = 1);
% auf, grl 設定
auf = AUF(AUFMode=1,a_start=0.1,a_end=1.001,a_num=10);
auf = AUF(AUFMode=0);
grl = GRL(GRLMode=1,file="GRL-F13L20,LRA12,E2C0.73-1.25_0322 (KeepSub).mat");
segment = Segment(num=5);
lens = Lens(LRA = 12,...
            size_hor = 186.5,...
            size_ver = 311.7,...
            pitch = 1.001,...
            refractive_index = 1.49,...
            thickness_EI0 = 1.524,...
            aperture = 1.001,...
            radius = 1.674,...
            reversed = 0,...
            grl = grl, ...
            auf = auf,...
            segment = segment);
% 置於 lens 和 prism 之間的空氣層
air_prismtolens = Lens( LRA = 12,...
                        size_hor = 186.5,...
                        size_ver = 311.7,...
                        pitch = 1.001,...
                        refractive_index = 1,...                            % 空氣層
                        thickness = 0.15 + lens.fullheight_EI0,...          % 空氣層
                        aperture = 1.001,...
                        radius = 1.674,...
                        reversed = 1,    ...                                % 結構朝下
                        grl = grl, ...
                        auf = auf, ...
                        vex_cave = -1,...
                        segment = segment);                                     % 凹透鏡
gap = Cube(thickness=3.663,refractive_index=1.52);
displayCover = Cube(thickness=0.264,refractive_index=1.51);

%% step 2: 建立 medium train
% 預設追跡順序: 遞增 (從上至下)
medium_list = {air_eye,gp,air_prismtolens,lens,gap,displayCover};
% 更新需要關聯其他介質的參數
% 0. medium train
medium_train = MediumTrain(eye,medium_list); % 同時更新 Z, order
% 1. eye edge position (Eye): with LRA
eye.deriveEdge(lens)
% 2. prism normal: assume 均使用 lens center XY 的 位置
gp.deriveNormalList(lens)

%% step 3: 光線追跡
% IPA layer: air(Eye) --> prism --> air(Lens)
% noIPA layer: "air(lens)" --> lens --> gap --> displayCover
tracingBus = TracingBus(medium_train,IPA=[1:3]);
tracingBus.tracing
% Point Matrix object
RP = Point_Matrix(tracingBus.RP);
RP_eye = RP.eye_extract;